{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMMC,EAAYC,SAASC,cAAc,SACrBD,SAASC,cAAc,yBAwC3C,SAASC,EAAcC,GACpB,IAAMC,EAAqCD,EAArCC,SAAoBC,EAAiBF,EAAjBE,MAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3B,IAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,WACLH,EACFF,EAAQ,sBAAqCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEnDG,EAAO,qBAAoCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAElDA,MA9CLN,EAAUe,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAIC,iBAGJ,IAAMC,EAAWF,EAAIG,cAAcD,SAC7BE,EAASF,EAASE,OAAOC,MACzBC,EAAOC,OAAOL,EAASI,KAAKD,OAC9BG,EAAQD,OAAOL,EAASZ,MAAMe,OAGlC,GAAID,EAAS,GAAKE,EAAO,GAAKE,EAAQ,EAGpC,YAFA1B,EAAA2B,OAAOC,QAAS,0BACd,CAAErB,SAAU,eAIhB,IAAK,IAAIsB,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EACrDH,GAASF,EAGXnB,EAAcwB,GACXC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACnBR,EAAA2B,OAAOK,QAAQ,sBAAqChB,OAAfT,EAAS,QAAYS,OAANR,EAAM,UAEzDyB,OAAM,SAAAF,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACpBR,EAAA2B,OAAOC,QAAQ,qBAAoCZ,OAAfT,EAAS,QAAYS,OAANR,EAAM,UAE1D0B,QAAQhB,EAAIG,cAAcc,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n// const delayInput = document.querySelector('input[name=\"delay\"]');\n// const stepInput = document.querySelector('input[name=\"step\"]');\n// const amountInput = document.querySelector('input[name=\"amount\"]');\nconst formInput = document.querySelector('.form');\nconst buttonInput = document.querySelector('button[type=\"submit\"]');\n\n\n\n\nformInput.addEventListener('submit', onFormSubmit);\n// buttonInput.addEventListener('input', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault()\n  // formData[evt.currentTtarget.elements.name] = evt.currentTtarget.elements.value;\n  // const { elements: { delay, step, amount } } = evt.currentTarget;\n  const elements = evt.currentTarget.elements;\n  const amount = elements.amount.value;\n  const step = Number(elements.step.value);\n  let delay = Number(elements.delay.value);\n  \n\n  if (amount < 0 || step < 0 || delay < 0) {\n    Notify.failure(`Enter a positive number`,\n      { position: \"center-top\" });\n    return\n  };\n\n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n    // let { position: position, delay: delay } = object;\n\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n    Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n    Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n  })\n  .finally(evt.currentTarget.reset());\n    \n  }\n}\n\nfunction createPromise(object) {\n   let { position: position, delay: delay } = object;\n  return new Promise((resolve, reject) => {\n   \n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve(` Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(` Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n     \n  })\n  \n  return\n};\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formInput","document","querySelector","$ce04d3a99e08e73b$var$createPromise","object","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","elements","currentTarget","amount","value","step","Number","delay1","Notify","failure","position1","then","param","success","catch","finally","reset"],"version":3,"file":"03-promises.a3ca98f1.js.map"}