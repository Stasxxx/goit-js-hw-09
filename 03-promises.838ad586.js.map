{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAI9BC,GAHQF,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACvBD,SAASC,cAAc,0BAEtC,IACIE,EADAC,EAAW,EAEXC,GAAW,EAMf,SAASC,EAAaC,GACpBA,EAAIC,iBACJ,MAAQC,UAAYC,MAAAC,EAAOC,KAAAC,EAAMC,OAAAC,IAAaR,EAAIS,cAE9CZ,IAAaW,IAGjBX,GAAY,EACZD,EAAOU,EAAKI,MAEZC,QAAQC,IAAIJ,EAAOE,OACnBC,QAAQC,IAAIR,EAAMM,OAClBC,QAAQC,IAAIN,EAAKI,OAInB,SAAuBG,EAAUC,GAC/B,GAAIhB,EACA,OAEJA,GAAW,EACJ,IAAIiB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACLH,EAEHF,EAAQ,uBAAqBH,QAAiBC,OAE3CG,EAAI,sBAAoBJ,QAAiBC,SAE5CA,MAjBHQ,CAAczB,EAAUO,EAAMM,QAhBhClB,EAAK+B,iBAAiB,SAAUxB,GAChCJ,EAAO4B,iBAAiB,QAASxB,GAsCjCgB,QAAQlB,EAAUD,GACf4B,MAAK,EAAGC,SAAAC,EAAUvB,MAAAwB,MACjBhB,QAAQC,IAAI,uBAAqBc,QAAiBC,UAEnDC,OAAM,EAAGH,SAAAI,EAAU1B,MAAA2B,MAClBnB,QAAQC,IAAI,sBAAoBiB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nlet position = 0;\nlet STEP;\nlet isActive = false;\n// console.log(STEP)\n\nform.addEventListener('submit', onFormSubmit);\nbutton.addEventListener('input', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault()\n  const { elements: { delay, step, amount } } = evt.currentTarget;\n \n  if (position === amount) {\n    return\n  }\n  position += 1;\n  STEP = step.value;\n  \n  console.log(amount.value);\n  console.log(delay.value);\n  console.log(step.value);\n  createPromise(position, delay.value)\n}\n\nfunction createPromise(position, delay) {\n  if (isActive) {\n      return;\n  }\n  isActive = true;\n  return new Promise((fulfill, rejec) => {\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      \n     fulfill(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    } else {\n      rejec(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n  })\n  \n  \n};\n\nPromise(position, STEP)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$button","$47d4ff9957288465$var$STEP","$47d4ff9957288465$var$position","$47d4ff9957288465$var$isActive","$47d4ff9957288465$var$onFormSubmit","evt","preventDefault","elements","delay","delay1","step","step1","amount","amount1","currentTarget","value","console","log","position1","delay2","Promise","fulfill","rejec","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","addEventListener","then","position","position2","delay3","catch","position3","delay4"],"version":3,"file":"03-promises.838ad586.js.map"}