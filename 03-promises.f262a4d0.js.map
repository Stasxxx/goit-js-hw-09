{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAYC,SAASC,cAAc,SACrBD,SAASC,cAAc,yBAmC3C,SAASC,EAAeC,EAAUC,GAEhC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAIMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACLH,EACFF,EAAQ,sBAAsBH,QAAeC,OAE7CG,EAAO,qBAAqBJ,QAAeC,SAE5CA,MA5CLL,EAAUa,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAWF,EAAIG,cAAcD,SAC7BE,EAASF,EAASE,OAAOC,MACzBC,EAAOC,OAAOL,EAASI,KAAKD,OAClC,IAAIG,EAAQD,OAAOL,EAASX,MAAMc,OAElC,GAAID,EAAS,GAAKE,EAAO,GAAKE,EAAQ,EAGpC,YAFAxB,EAAAyB,OAAOC,QAAQ,0BACb,CAAEpB,SAAU,eAIhB,IAAK,IAAIqB,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EACrDH,GAASF,EAETjB,EAAcsB,EAAUH,GACvBI,MAAK,CAAEtB,EAAUC,KAClBP,EAAAyB,OAAOI,QAAQ,sBAAsBvB,QAAeC,UAEnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MACpBP,EAAAyB,OAAOC,QAAQ,qBAAqBpB,QAAeC,UAElDwB,QAAQf,EAAIG,cAAca","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst formInput = document.querySelector('.form');\nconst buttonInput = document.querySelector('button[type=\"submit\"]');\n\n\n\n\nformInput.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault()\n  const elements = evt.currentTarget.elements;\n  const amount = elements.amount.value;\n  const step = Number(elements.step.value);\n  let delay = Number(elements.delay.value);\n  \n  if (amount < 0 || step < 0 || delay < 0) {\n    Notify.failure(`Enter a positive number`,\n      { position: \"center-top\" });\n    return\n  };\n\n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n\n    createPromise(position, delay)\n    .then(( position, delay ) => {\n    Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n    Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n  })\n    .finally(evt.currentTarget.reset());\n  }\n}\n\nfunction createPromise( position, delay) {\n   \n  return new Promise((resolve, reject) => {\n    const object = {\n      position,\n      delay,\n    };\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve(` Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(` Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n     \n  })\n};\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formInput","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","elements","currentTarget","amount","value","step","Number","delay1","Notify","failure","position1","then","success","catch","finally","reset"],"version":3,"file":"03-promises.f262a4d0.js.map"}