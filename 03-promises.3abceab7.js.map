{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SACtBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACvBD,SAASC,cAAc,yBAmBtC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACLH,EAEHF,EAAQ,uBADPH,GAAY,QACiCC,OAE7CG,EAAM,sBAAoBJ,QAAiBC,SAE5CA,MA3BLQ,QAAQC,IAAId,GAEZA,EAAKe,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAQC,UAAUC,MAAEA,EAAKC,KAAEA,EAAMC,OAAAC,IAAaN,EAAIO,cAClD,GATa,IASID,EACf,OAGFnB,OAqBFA,EAAc,EAAG,MACdqB,MAAK,EAAGC,SAAAC,EAAUP,MAAAQ,MACjBd,QAAQC,IAAI,uBAAqBY,QAAiBC,UAEnDC,OAAM,EAAGH,SAAAI,EAAUV,MAAAW,MAClBjB,QAAQC,IAAI,sBAAoBe,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nlet position = 0;\nconsole.log(form)\n\nform.addEventListener('submit', onFormSubmit);\n// amount.addEventListener('input', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault()\n  const { elements: { delay, step, amount } } = evt.currentTarget;\n  if (position === amount) {\n    return\n  }\n\n  createPromise()\n  // console.log(amount.value);\n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((fulfill, rejec) => {\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      position += 1;\n     fulfill(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    } else {\n      rejec(`❌ Rejected promise ${position} in ${delay}ms`) \n    }\n  }, delay);\n  })\n  \n  \n};\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","fulfill","rejec","shouldResolve","Math","random","setTimeout","console","log","addEventListener","evt","preventDefault","elements","delay","step","amount","amount1","currentTarget","then","position","position2","delay2","catch","position3","delay3"],"version":3,"file":"03-promises.3abceab7.js.map"}