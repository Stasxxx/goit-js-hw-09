{"mappings":"gfAAAA,EAAA,SAEA,IAOIC,EAPEC,EAAOC,SAASC,cAAc,SAI9BC,GAHQF,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACvBD,SAASC,cAAc,0BAElCE,EAAW,EAEXC,GAAW,EAMf,SAASC,EAAaC,GACpBA,EAAIC,iBACJ,IAA+DC,EAAjBF,EAAIG,cAA1CC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJM,KAAMC,EAAMP,EAANQ,OAE7Bb,IAAaY,IAGjBZ,GAAY,EACZL,EAAOe,EAAKI,MAEZC,QAAQC,IAAIJ,EAAOE,OACnBC,QAAQC,IAAIR,EAAMM,OAClBC,QAAQC,IAAIN,EAAKI,OAInB,SAAuBG,EAAUC,GAC/B,GAAIjB,EACA,OAEJA,GAAW,EACJ,IAAIkB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,WACLH,EAEHF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEnDG,EAAI,sBAAuCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEpDA,MAjBHS,CAAc3B,EAAUQ,EAAMM,QAhBhClB,EAAKgC,iBAAiB,SAAU1B,GAChCH,EAAO6B,iBAAiB,QAAS1B,GAsCjCiB,QAAQnB,EAAUL,GACfkC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALrB,MACjBM,QAAQC,IAAI,uBAAwCU,OAAfK,EAAS,QAAYL,OAANO,EAAM,UAE3DC,OAAM,SAAAJ,G,IAAGK,EAAQL,EAARE,SAAUI,EAAKN,EAALrB,MAClBM,QAAQC,IAAI,sBAAqCU,OAAfS,EAAS,QAAYT,OAANU,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nlet position = 0;\nlet STEP;\nlet isActive = false;\n// console.log(STEP)\n\nform.addEventListener('submit', onFormSubmit);\nbutton.addEventListener('input', onFormSubmit)\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault()\n  const { elements: { delay, step, amount } } = evt.currentTarget;\n \n  if (position === amount) {\n    return\n  }\n  position += 1;\n  STEP = step.value;\n  \n  console.log(amount.value);\n  console.log(delay.value);\n  console.log(step.value);\n  createPromise(position, delay.value)\n}\n\nfunction createPromise(position, delay) {\n  if (isActive) {\n      return;\n  }\n  isActive = true;\n  return new Promise((fulfill, rejec) => {\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      \n     fulfill(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    } else {\n      rejec(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n  })\n  \n  \n};\n\nPromise(position, STEP)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["parcelRequire","$ce04d3a99e08e73b$var$STEP","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$isActive","$ce04d3a99e08e73b$var$onFormSubmit","evt","preventDefault","_elements","currentTarget","elements","delay1","delay","step1","step","amount1","amount","value","console","log","position1","delay2","Promise","fulfill","rejec","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$createPromise","addEventListener","then","param","position2","position","delay3","catch","position3","delay4"],"version":3,"file":"03-promises.4b2d1123.js.map"}